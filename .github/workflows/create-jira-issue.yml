name: Create Jira Issue with Assignee

on:
  issues:
    types:
      - opened

jobs:
  create-jira-issue:
    name: Create Jira Issue
    runs-on: ubuntu-latest
    steps:
      - name: Login to Jira
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Define GitHub to Jira Mapping
        id: mapping
        run: |
          echo "::set-output name=mapping::$(cat <<EOF
          {
            "Stemplun": "이하림",
            "jh-zhirun": "지윤",
            "Hogn-hyeonbin": "홍현빈",
            "swp91": "박성우"
          }
          EOF
          )"

      - name: Get Assignee for Jira
        id: get-assignee
        run: |
          # GitHub Issue 작성자 확인
          GITHUB_USERNAME="${{ github.event.issue.user.login }}"

          # 매핑된 Jira 계정 가져오기
          MAPPING='${{ steps.mapping.outputs.mapping }}'
          ASSIGNEE=$(echo "$MAPPING" | jq -r --arg USERNAME "$GITHUB_USERNAME" '.[$USERNAME]')

          if [ "$ASSIGNEE" == "null" ]; then
            echo "Error: No Jira user mapping found for GitHub user: $GITHUB_USERNAME"
            exit 1
          fi

          echo "Jira Assignee: $ASSIGNEE"
          echo "::set-output name=assignee::$ASSIGNEE"

      - name: Create Jira Issue
        id: create-jira
        uses: atlassian/gajira-create@v3
        with:
          project: T3
          issuetype: Task
          summary: "${{ github.event.issue.title }}"
          description: "${{ github.event.issue.body }}"
          fields: |
            {
              "assignee": {
                "name": "${{ steps.get-assignee.outputs.assignee }}"
              }
            }

      - name: Add Jira Issue Key to GitHub Issue
        uses: actions/github-script@v6
        with:
          script: |
            const jiraIssueKey = '${{ steps.create-jira.outputs.issue }}';
            const issueNumber = context.payload.issue.number;

            // GitHub Issue에 Jira Issue 키를 댓글로 추가
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `Jira Issue created: ${jiraIssueKey}`
            });
